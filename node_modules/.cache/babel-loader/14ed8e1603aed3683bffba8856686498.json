{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\react-app\\\\react-todo-app-v1-master\\\\src\\\\components\\\\TodoList.js\";\nimport React, { useState, useEffect } from 'react';\nimport TodoForm from './TodoForm';\nimport Todo from './Todo';\nimport axios from 'axios';\n\nfunction TodoList() {\n  const [todos, setTodos] = useState([]);\n  const link = 'http://localhost:5000/api/v1/crud';\n  debugger;\n\n  const addTodo = todo => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n\n    const newTodos = [todo, ...todos];\n    setTodos(newTodos);\n    console.log(...todos);\n    debugger;\n  };\n\n  const updateTodo = (todoId, newValue) => {\n    debugger;\n\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n\n    debugger;\n    setTodos(prev => prev.map(item => item.id === todoId ? newValue : item));\n  };\n\n  const removeTodo = id => {\n    const removedArr = [...todos].filter(todo => todo.id !== id);\n    setTodos(removedArr);\n  };\n\n  const completeTodo = id => {\n    let updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n\n      return todo;\n    });\n    debugger;\n    setTodos(updatedTodos);\n  };\n\n  useEffect(() => {\n    getTodos();\n  }, []);\n\n  const getTodos = () => {\n    // e.preventDefault()\n    debugger; // const data = axios.post(link)\n\n    axios.get(`${link}`).then(res => {\n      console.log(res);\n      setTodos(res.data.crud);\n      todos ? todos.map((value, index) => setTodos(value.name)) : null;\n    });\n    debugger;\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, \"User Todo list\"), /*#__PURE__*/React.createElement(TodoForm, {\n    onSubmit: addTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Todo, {\n    todos: todos,\n    completeTodo: completeTodo,\n    removeTodo: removeTodo,\n    updateTodo: updateTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default TodoList;","map":{"version":3,"sources":["C:/Users/hp/Desktop/react-app/react-todo-app-v1-master/src/components/TodoList.js"],"names":["React","useState","useEffect","TodoForm","Todo","axios","TodoList","todos","setTodos","link","addTodo","todo","text","test","newTodos","console","log","updateTodo","todoId","newValue","prev","map","item","id","removeTodo","removedArr","filter","completeTodo","updatedTodos","isComplete","getTodos","get","then","res","data","crud","value","index","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport TodoForm from './TodoForm'\nimport Todo from './Todo'\nimport axios from 'axios'\n\nfunction TodoList() {\n  const [todos, setTodos] = useState([])\n  const link = 'http://localhost:5000/api/v1/crud'\n  debugger\n\n  const addTodo = (todo) => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return\n    }\n\n    const newTodos = [todo, ...todos]\n\n    setTodos(newTodos)\n    console.log(...todos)\n    debugger\n  }\n\n  const updateTodo = (todoId, newValue) => {\n    debugger\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return\n    }\n    debugger\n    setTodos((prev) =>\n      prev.map((item) => (item.id === todoId ? newValue : item))\n    )\n  }\n\n  const removeTodo = (id) => {\n    const removedArr = [...todos].filter((todo) => todo.id !== id)\n\n    setTodos(removedArr)\n  }\n\n  const completeTodo = (id) => {\n    let updatedTodos = todos.map((todo) => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete\n      }\n      return todo\n    })\n    debugger\n    setTodos(updatedTodos)\n  }\n\n  useEffect(() => {\n    getTodos()\n  }, [])\n\n  const getTodos = () => {\n    // e.preventDefault()\n    debugger\n    // const data = axios.post(link)\n    axios.get(`${link}`).then((res) => {\n      console.log(res)\n      setTodos(res.data.crud)\n      todos ? todos.map((value, index) => setTodos(value.name)) : null\n    })\n    debugger\n  }\n\n  return (\n    <>\n      <h1>User Todo list</h1>\n      <TodoForm onSubmit={addTodo} />\n      <Todo\n        todos={todos}\n        completeTodo={completeTodo}\n        removeTodo={removeTodo}\n        updateTodo={updateTodo}\n      />\n    </>\n  )\n}\n\nexport default TodoList\n"]},"metadata":{},"sourceType":"module"}