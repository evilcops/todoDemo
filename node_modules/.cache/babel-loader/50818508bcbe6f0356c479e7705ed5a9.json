{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\react-app\\\\react-todo-app-v1-master\\\\src\\\\components\\\\TodoList.js\";\nimport React, { useState, useEffect } from 'react';\nimport TodoForm from './TodoForm';\nimport Todo from './Todo';\nimport axios from 'axios';\n\nfunction TodoList() {\n  const [todos, setTodos] = useState([]);\n  const [todos2, setTodos2] = useState([]);\n  const link = 'http://localhost:5000/api/v1/crud';\n\n  const addTodo = todo => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n\n    const newTodos = [todo, ...todos];\n    setTodos(newTodos);\n    console.log(...todos);\n  };\n\n  const updateTodo = (todoId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n\n    setTodos(prev => prev.map(item => item.id === todoId ? newValue : item));\n  };\n\n  const removeTodo = todo => {\n    axios.delete(`${link}/${todo._id}`).then(res => {\n      console.log(res);\n      debugger;\n      window.location.reload(true); // const removedArr = [...todos].filter((todo) => todo.id !== todo._id)\n      // setTodos(removedArr)\n    });\n  };\n\n  const completeTodo = id => {\n    let updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  useEffect(() => {\n    getTodos();\n  }, []);\n\n  const getTodos = async () => {\n    // e.preventDefault()\n    await axios.get(`${link}`).then(res => {\n      console.log(res);\n      setTodos(res.data.crud);\n      todos.push(res.data.crud);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, \"User Todo list\"), /*#__PURE__*/React.createElement(TodoForm, {\n    onSubmit: addTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Todo, {\n    todos: todos,\n    completeTodo: completeTodo,\n    removeTodo: removeTodo,\n    updateTodo: updateTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default TodoList;","map":{"version":3,"sources":["C:/Users/hp/Desktop/react-app/react-todo-app-v1-master/src/components/TodoList.js"],"names":["React","useState","useEffect","TodoForm","Todo","axios","TodoList","todos","setTodos","todos2","setTodos2","link","addTodo","todo","text","test","newTodos","console","log","updateTodo","todoId","newValue","prev","map","item","id","removeTodo","delete","_id","then","res","window","location","reload","completeTodo","updatedTodos","isComplete","getTodos","get","data","crud","push"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport TodoForm from './TodoForm'\nimport Todo from './Todo'\nimport axios from 'axios'\n\nfunction TodoList() {\n  const [todos, setTodos] = useState([])\n  const [todos2, setTodos2] = useState([])\n\n  const link = 'http://localhost:5000/api/v1/crud'\n\n  const addTodo = (todo) => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return\n    }\n\n    const newTodos = [todo, ...todos]\n\n    setTodos(newTodos)\n    console.log(...todos)\n  }\n\n  const updateTodo = (todoId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return\n    }\n    setTodos((prev) =>\n      prev.map((item) => (item.id === todoId ? newValue : item))\n    )\n  }\n\n  const removeTodo = (todo) => {\n    axios.delete(`${link}/${todo._id}`).then((res) => {\n      console.log(res)\n      debugger\n      window.location.reload(true)\n\n      // const removedArr = [...todos].filter((todo) => todo.id !== todo._id)\n      // setTodos(removedArr)\n    })\n  }\n\n  const completeTodo = (id) => {\n    let updatedTodos = todos.map((todo) => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete\n      }\n      return todo\n    })\n    setTodos(updatedTodos)\n  }\n\n  useEffect(() => {\n    getTodos()\n  }, [])\n\n  const getTodos = async () => {\n    // e.preventDefault()\n    await axios.get(`${link}`).then((res) => {\n      console.log(res)\n      setTodos(res.data.crud)\n      todos.push(res.data.crud)\n    })\n  }\n\n  return (\n    <>\n      <h1>User Todo list</h1>\n      <TodoForm onSubmit={addTodo} />\n      <Todo\n        todos={todos}\n        completeTodo={completeTodo}\n        removeTodo={removeTodo}\n        updateTodo={updateTodo}\n      />\n    </>\n  )\n}\n\nexport default TodoList\n"]},"metadata":{},"sourceType":"module"}