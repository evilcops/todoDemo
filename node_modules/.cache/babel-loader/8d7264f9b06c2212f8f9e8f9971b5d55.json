{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\react-app\\\\react-todo-app-v1-master\\\\src\\\\components\\\\TodoForm.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\n\nfunction TodoForm(props) {\n  const [input, setInput] = useState(props.edit ? props.edit.value : '');\n  const inputRef = useRef(null);\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n  const link = 'http://localhost:5000/api/v1/crud';\n  const [todos, setTodos] = useState([]);\n  useEffect(() => {// getTodos()\n  }, []);\n\n  async function getTodos() {}\n\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    debugger;\n    axios.post(`${link}`, {\n      name: input\n    }).then(res => {\n      console.log(res);\n      props.onSubmit({\n        id: Math.floor(Math.random() * 10000),\n        text: input\n      });\n      setInput('');\n      window.location.reload(true);\n    });\n  };\n\n  const handleEditSubmit = (todoId, newValue) => {\n    debugger;\n    axios.patch(`${link}/${todoId}`, {\n      name: newValue\n    }).then(res => {\n      console.log(res);\n      debugger;\n\n      if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n        return;\n      }\n\n      setTodos(prev => prev.map(item => item.id === todoId ? newValue : item));\n      window.location.reload(true);\n    });\n  };\n\n  return (\n    /*#__PURE__*/\n    // <form onSubmit={handleSubmit} className='todo-form'>\n    React.createElement(\"form\", {\n      className: \"todo-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }\n    }, props.edit ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"Update your item\",\n      value: input,\n      onChange: handleChange,\n      name: \"text\",\n      ref: inputRef,\n      className: \"todo-input edit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: handleEditSubmit,\n      className: \"todo-button edit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, \"Update\")) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"Add a todo\",\n      value: input,\n      onChange: handleChange,\n      name: \"text\",\n      className: \"todo-input\",\n      ref: inputRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: handleSubmit,\n      className: \"todo-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, \"Add todo\")))\n  );\n}\n\nexport default TodoForm;","map":{"version":3,"sources":["C:/Users/hp/Desktop/react-app/react-todo-app-v1-master/src/components/TodoForm.js"],"names":["React","useState","useEffect","useRef","axios","TodoForm","props","input","setInput","edit","value","inputRef","current","focus","link","todos","setTodos","getTodos","handleChange","e","target","handleSubmit","preventDefault","post","name","then","res","console","log","onSubmit","id","Math","floor","random","text","window","location","reload","handleEditSubmit","todoId","newValue","patch","test","prev","map","item"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAACK,KAAK,CAACG,IAAN,GAAaH,KAAK,CAACG,IAAN,CAAWC,KAAxB,GAAgC,EAAjC,CAAlC;AAEA,QAAMC,QAAQ,GAAGR,MAAM,CAAC,IAAD,CAAvB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,QAAQ,CAACC,OAAT,CAAiBC,KAAjB;AACD,GAFQ,CAAT;AAIA,QAAMC,IAAI,GAAG,mCAAb;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM,CACd;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,iBAAee,QAAf,GAA0B,CAAE;;AAE5B,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAC1BX,IAAAA,QAAQ,CAACW,CAAC,CAACC,MAAF,CAASV,KAAV,CAAR;AACD,GAFD;;AAIA,QAAMW,YAAY,GAAIF,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACG,cAAF;AACA;AACAlB,IAAAA,KAAK,CAACmB,IAAN,CAAY,GAAET,IAAK,EAAnB,EAAsB;AAAEU,MAAAA,IAAI,EAAEjB;AAAR,KAAtB,EAAuCkB,IAAvC,CAA6CC,GAAD,IAAS;AACnDC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACApB,MAAAA,KAAK,CAACuB,QAAN,CAAe;AACbC,QAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,CADS;AAEbC,QAAAA,IAAI,EAAE3B;AAFO,OAAf;AAIAC,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACA2B,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,IAAvB;AACD,KARD;AASD,GAZD;;AAcA,QAAMC,gBAAgB,GAAG,CAACC,MAAD,EAASC,QAAT,KAAsB;AAC7C;AACApC,IAAAA,KAAK,CAACqC,KAAN,CAAa,GAAE3B,IAAK,IAAGyB,MAAO,EAA9B,EAAiC;AAAEf,MAAAA,IAAI,EAAEgB;AAAR,KAAjC,EAAqDf,IAArD,CAA2DC,GAAD,IAAS;AACjEC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA;;AACA,UAAI,CAACc,QAAQ,CAACN,IAAV,IAAkB,QAAQQ,IAAR,CAAaF,QAAQ,CAACN,IAAtB,CAAtB,EAAmD;AACjD;AACD;;AACDlB,MAAAA,QAAQ,CAAE2B,IAAD,IACPA,IAAI,CAACC,GAAL,CAAUC,IAAD,IAAWA,IAAI,CAACf,EAAL,KAAYS,MAAZ,GAAqBC,QAArB,GAAgCK,IAApD,CADM,CAAR;AAGAV,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,IAAvB;AACD,KAVD;AAWD,GAbD;;AAcA;AAAA;AACE;AACA;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG/B,KAAK,CAACG,IAAN,gBACC,uDACE;AACE,MAAA,WAAW,EAAC,kBADd;AAEE,MAAA,KAAK,EAAEF,KAFT;AAGE,MAAA,QAAQ,EAAEW,YAHZ;AAIE,MAAA,IAAI,EAAC,MAJP;AAKE,MAAA,GAAG,EAAEP,QALP;AAME,MAAA,SAAS,EAAC,iBANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eASE;AAAQ,MAAA,OAAO,EAAE2B,gBAAjB;AAAmC,MAAA,SAAS,EAAC,kBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF,CADD,gBAeC,uDACE;AACE,MAAA,WAAW,EAAC,YADd;AAEE,MAAA,KAAK,EAAE/B,KAFT;AAGE,MAAA,QAAQ,EAAEW,YAHZ;AAIE,MAAA,IAAI,EAAC,MAJP;AAKE,MAAA,SAAS,EAAC,YALZ;AAME,MAAA,GAAG,EAAEP,QANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eASE;AAAQ,MAAA,OAAO,EAAEU,YAAjB;AAA+B,MAAA,SAAS,EAAC,aAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF,CAhBJ;AAFF;AAkCD;;AAED,eAAehB,QAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport axios from 'axios'\n\nfunction TodoForm(props) {\n  const [input, setInput] = useState(props.edit ? props.edit.value : '')\n\n  const inputRef = useRef(null)\n\n  useEffect(() => {\n    inputRef.current.focus()\n  })\n\n  const link = 'http://localhost:5000/api/v1/crud'\n  const [todos, setTodos] = useState([])\n\n  useEffect(() => {\n    // getTodos()\n  }, [])\n\n  async function getTodos() {}\n\n  const handleChange = (e) => {\n    setInput(e.target.value)\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    debugger\n    axios.post(`${link}`, { name: input }).then((res) => {\n      console.log(res)\n      props.onSubmit({\n        id: Math.floor(Math.random() * 10000),\n        text: input,\n      })\n      setInput('')\n      window.location.reload(true)\n    })\n  }\n\n  const handleEditSubmit = (todoId, newValue) => {\n    debugger\n    axios.patch(`${link}/${todoId}`, { name: newValue }).then((res) => {\n      console.log(res)\n      debugger\n      if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n        return\n      }\n      setTodos((prev) =>\n        prev.map((item) => (item.id === todoId ? newValue : item))\n      )\n      window.location.reload(true)\n    })\n  }\n  return (\n    // <form onSubmit={handleSubmit} className='todo-form'>\n    <form className='todo-form'>\n      {props.edit ? (\n        <>\n          <input\n            placeholder='Update your item'\n            value={input}\n            onChange={handleChange}\n            name='text'\n            ref={inputRef}\n            className='todo-input edit'\n          />\n          <button onClick={handleEditSubmit} className='todo-button edit'>\n            Update\n          </button>\n        </>\n      ) : (\n        <>\n          <input\n            placeholder='Add a todo'\n            value={input}\n            onChange={handleChange}\n            name='text'\n            className='todo-input'\n            ref={inputRef}\n          />\n          <button onClick={handleSubmit} className='todo-button'>\n            Add todo\n          </button>\n        </>\n      )}\n    </form>\n  )\n}\n\nexport default TodoForm\n"]},"metadata":{},"sourceType":"module"}